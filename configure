#!/bin/bash

# 初始化CFLAGS和RM变量
CFLAGS=""
RM=""

# 检查gcc是否安装
which gcc > /dev/null 2>&1
if [ $? -ne 0 ]; then
  echo "Error: GCC is not installed. Please install GCC."
  exit 1
fi

# 检查操作系统并配置相应的变量
OS="`uname`"
case $OS in
  'Linux')
    RM="rm -f"
    CFLAGS="-I. -lcjson"
    TARGET="student"
    ;;
  'Darwin')
    RM="rm -f"
    CFLAGS="-I. -lcjson"
    TARGET="student"
    ;;
  'WindowsNT')
    RM="del /Q"
    CFLAGS="-I. -lws2_32 -lcjson"
    TARGET="student.exe"
    ;;
  *)
    echo "Unsupported OS: $OS"
    exit 1
    ;;
esac

# 检查cjson库是否可用
echo "#include <cjson/cJSON.h>" | gcc -E - > /dev/null 2>&1
if [ $? -ne 0 ]; then
	echo "Error: cjson library is not installed. Please install cjson."
	exit 1
fi

# 生成Makefile
echo "Generating Makefile for $OS..."
cat > Makefile <<EOF
# 自动生成的Makefile
CC=gcc
RM=$RM
TARGET=$TARGET
CFLAGS=$CFLAGS
SRC=student.c

\$(TARGET): \$(SRC)
	\$(CC) -o \$@ \$^ \$(CFLAGS)

clean:
	\$(RM) \$(TARGET)

# 添加check目标
check:
	@echo "Running tests..."
	./\$(TARGET)
	# 例如: ./test_student
EOF

# 添加distcheck目标
distcheck:
    @echo "Running distcheck..."
    # 编译
    make \$(TARGET)
    # 运行测试
    make check
    # 模拟安装过程
    @echo "Simulating installation..."
    # 模拟卸载过程
    @echo "Simulating uninstallation..."
    # 检查是否有遗留文件
    @echo "Checking for leftover files..."
EOF

echo "Configuration completed successfully."